version: '3'

services:
  web:
    build:
      target: development
    command: npm run docker:command:dev
    ports:
      - "${BIND_PORT}:${BIND_PORT}"
    volumes:
      - .:/app
    depends_on:
      - postgres
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./postgres:/var/lib/postgresql/data
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:8.2.6
    user: '472'
    restart: always
    environment:
      GF_INSTALL_PLUGINS: 'grafana-simple-json-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./.env
    ports:
      - 4000:3000
    depends_on:
      - prometheus

volumes:
  prometheus_data: {}
  grafana_data: {}
